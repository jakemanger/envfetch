% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/envfetch.R
\name{envfetch}
\alias{envfetch}
\title{envfetch: Extract Environmental Data for Spatial-Temporal Objects}
\usage{
envfetch(
  x,
  r = NULL,
  bands = NULL,
  temporal_fun = "mean",
  spatial_fun = "mean",
  use_cache = TRUE,
  out_dir = file.path("./output/"),
  out_filename = NA,
  overwrite = TRUE,
  cache_dir = file.path(out_dir, "cache/"),
  time_column_name = NULL,
  .time_rep = NA,
  init_gee = TRUE,
  ...
)
}
\arguments{
\item{x}{A tibble containing an \code{sf} "geometry" column, and optionally, a time column.}

\item{r}{Specifies the data source: either a local raster file path (which can include subdatasets) or a Google Earth Engine collection name. For multiple sources, provide a list and also specify the \code{bands} and \code{temporal_fun}, and optionally \code{time_column_name}, parameters accordingly.}

\item{bands}{Numeric or character vector specifying band numbers or names to extract. Use \code{NULL} to extract all bands. For multiple sources, provide a list of vectors.}

\item{temporal_fun}{Function or string used to summarize data for each time interval. Default is \code{mean(x, na.rm=TRUE)}. For Google Earth Engine, the string \code{'last'} returns the value closest to the start of the time interval. For multiple sources, provide a list of functions or strings.}

\item{spatial_fun}{Function or string used to summarize data spatially (if \code{x} is a polygon). Default (\code{'mean'}) for local files is \code{mean(x, na.rm=TRUE)} and for google earth engine is \code{rgee::ee$Reducer$mean()}. For local files, use \code{NULL} to not summarise spatially before summarising temporally.  If you are extracting from google earth engine, you must specify a google earth engine reducer \code{rgee::ee$Reducer} function (e.g. \code{rgee::ee$Reducer$sum()}). See https://r-spatial.github.io/rgee/reference/ee_extract.html". For different behaviour with multiple sources, provide a list of functions or strings.}

\item{use_cache}{Logical flag indicating whether to use caching. Default is \code{TRUE}.}

\item{out_dir}{Output directory for files. Default is \verb{./output/}.}

\item{out_filename}{Name for the output file, defaulting to a timestamped \code{.gpkg} file.}

\item{overwrite}{Logical flag to overwrite existing output files. Default is \code{TRUE}.}

\item{cache_dir}{Directory for caching files. Default is \verb{./output/cache/}.}

\item{time_column_name}{Name of the time column in \code{x}. Use \code{NULL} to auto-select a time column of type \code{lubridate::interval}. Default is NULL.}

\item{.time_rep}{Specifies repeating time intervals for extraction. Default is \code{NA}.}

\item{...}{Additional arguments for underlying extraction functions.}

\item{verbose}{Whether to print progress and what stage of the extraction you are. Default is TRUE.}
}
\value{
An enhanced version of the input \code{sf} collection, \code{x}, augmented with the extracted environmental data.
}
\description{
\code{envfetch} extracts environmental data based on spatial-temporal inputs from local raster datasets or Google Earth Engine.
The function includes features for caching, memory management, and data summarisation. For extracting from multiple data
sources, specify the \code{r}, \code{bands} and \code{temporal_fun} parameters accordingly.
}
\details{
\code{envfetch} serves as a high-level wrapper for specific data extraction methods:
\itemize{
\item For local raster files, it employs either \code{extract_over_space} or \code{extract_over_time}.
\item For Google Earth Engine collections, it uses \code{extract_gee}.
It also supports caching, allowing you to avoid repeated calculations and
resume work after interruptions.
}
}
\examples{
\dontrun{
# local raster file path example
extracted_data <- envfetch(x = my_data, r = "/path/to/local/raster/file.tif")

# loaded raster object example
library(terra)
r <- rast("/path/to/local/raster/file.tif")
extracted_data <- envfetch(x = my_data, r = r)

# Google Earth Engine example
extracted_gee_data <- envfetch(
  x = my_data,
  r = "GEE_COLLECTION_NAME",
  bands = c('BAND_NAME_1', 'BAND_NAME_2'),
  time_column_name = "time"
)

# multiple data sources example (both local raster and Google Earth Engine)
extracted_multi_data <- envfetch(
  x = my_data,
  r = list("/path/to/local/raster/file1.tif", "GEE_COLLECTION_NAME1", "/path/to/local/raster/file2.tif"),
  bands = list(c(1, 2), c('BAND_NAME_1', 'BAND_NAME_2'), c(3, 4)),
  temporal_fun = list(mean, 'last', median),
  time_column_name = "time"
)
}

}
\seealso{
Other relevant functions, used internally by \code{envfetch}: \code{\link{fetch}}, \code{\link{extract_gee}}, \code{\link{extract_over_time}}
}
