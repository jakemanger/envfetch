% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch.R
\name{fetch}
\alias{fetch}
\title{Fetch data from each row using anonymous functions}
\usage{
fetch(
  x,
  ...,
  use_cache = TRUE,
  out_dir = file.path("./output/"),
  out_filename = NA,
  overwrite = TRUE,
  cache_dir = file.path(out_dir, "cache/"),
  time_column_name = NULL,
  .time_rep = NA
)
}
\arguments{
\item{x}{A tibble with a \code{sf} "geometry" and a column with time (a \code{lubridate} interval or date), detected automatically or specified by the \code{time_column_name} parameter.}

\item{...}{Anonymous functions you would like to use on each row of the dataset.}

\item{use_cache}{Whether to cache your progress. Allows you to continue where you left off in case of an error or the process is interrupted.
Also avoids recomputing extractions between R sessions.}

\item{out_dir}{A directory to output your result. Is ignored if out_filename = NA.}

\item{out_filename}{The path to output the result. Set to NA (the default) to not save the result and only return the result.}

\item{overwrite}{Overwrite output file if exists.}

\item{cache_dir}{A directory to output cached progress. Is ignored if use_cache = FALSE.}

\item{time_column_name}{Name of the time column in the dataset. If NULL (the default), a column of type lubridate::interval
is automatically selected.}

\item{.time_rep}{A \code{time_rep} object. Used to repeat data extraction along repeating time intervals before and after the original datetime.
This can be relative to the start or the end of the input time interval (specified by the \code{relative_to_start} argument of \code{time_rep}). Defaults to the start.}

\item{verbose}{Whether to print progress and what stage of the extraction you are. Default is TRUE.}
}
\value{
tibble An augmented tibble with additional data fetched using supplied functions.
}
\description{
This function passes your data through your supplied extraction functions,
caches progress, so that if your function crashes somewhere, you can continue where you left off,
shows progress and estimated time to completion and
allows you to repeat sampling across different times.
}
\examples{
\dontrun{
extracted <- d \%>\%
  fetch(
    ~extract_across_times(.x, r = '/path/to/netcdf.nc'),
    ~extract_gee(
       .x,
       collection_name='MODIS/061/MOD13Q1',
       bands=c('NDVI', 'DetailedQA'),
       time_buffer=16,
     )
  )

# repeatedly extract and summarise data every fortnight for the last six months
# relative to the start of the time column in `d`
rep_extracted <- d \%>\%
  fetch(
    ~extract_across_times(.x, r = '/path/to/netcdf.nc'),
    ~extract_gee(
       .x,
       collection_name='MODIS/061/MOD13Q1',
       bands=c('NDVI', 'DetailedQA'),
       time_buffer=16,
     ),
    .time_rep=time_rep(interval=lubridate::days(14), n_start=-12),
  )
}
}
